{"version":3,"sources":["../../src/pages/dishday/dishday.module.ts","../../node_modules/@ionic-native/network/index.js","../../src/pages/dishday/dishday.ts","../../node_modules/rxjs/observable/merge.js","../../node_modules/rxjs-compat/observable/merge.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACR;AACQ;AAUhD;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;aACtC;YACD,SAAS,EAAE,CAAC,sEAAO,CAAC;SACrB,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;ACb9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC4D;AAC1D;AACC;AACvC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,eAAe,oEAAK;AACpB;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA,mB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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { DishdayPage } from './dishday';\nimport { Network } from '@ionic-native/network';\n@NgModule({\n  declarations: [\n    DishdayPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(DishdayPage),\n  ],\n  providers: [Network]\n})\nexport class DishdayPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dishday/dishday.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaCheck, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nexport var Connection;\n(function (Connection) {\n    Connection[Connection[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Connection[Connection[\"ETHERNET\"] = 1] = \"ETHERNET\";\n    Connection[Connection[\"WIFI\"] = 2] = \"WIFI\";\n    Connection[Connection[\"CELL_2G\"] = 3] = \"CELL_2G\";\n    Connection[Connection[\"CELL_3G\"] = 4] = \"CELL_3G\";\n    Connection[Connection[\"CELL_4G\"] = 5] = \"CELL_4G\";\n    Connection[Connection[\"CELL\"] = 6] = \"CELL\";\n    Connection[Connection[\"NONE\"] = 7] = \"NONE\";\n})(Connection || (Connection = {}));\n/**\n * @name Network\n * @description\n * Requires Cordova plugin: cordova-plugin-network-information. For more info, please see the [Network plugin docs](https://github.com/apache/cordova-plugin-network-information).\n *\n * @usage\n * ```typescript\n * import { Network } from '@ionic-native/network';\n *\n * constructor(private network: Network) { }\n *\n * ...\n *\n * // watch network for a disconnection\n * let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n *   console.log('network was disconnected :-(');\n * });\n *\n * // stop disconnect watch\n * disconnectSubscription.unsubscribe();\n *\n *\n * // watch network for a connection\n * let connectSubscription = this.network.onConnect().subscribe(() => {\n *   console.log('network connected!');\n *   // We just got a connection but we need to wait briefly\n *    // before we determine the connection type. Might need to wait.\n *   // prior to doing any api requests as well.\n *   setTimeout(() => {\n *     if (this.network.type === 'wifi') {\n *       console.log('we got a wifi connection, woohoo!');\n *     }\n *   }, 3000);\n * });\n *\n * // stop connect watch\n * connectSubscription.unsubscribe();\n *\n * ```\n * @advanced\n * The `type` property will return one of the following connection types: `unknown`, `ethernet`, `wifi`, `2g`, `3g`, `4g`, `cellular`, `none`\n */\nvar Network = (function (_super) {\n    __extends(Network, _super);\n    function Network() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n           * Constants for possible connection types\n           */\n        _this.Connection = {\n            UNKNOWN: 'unknown',\n            ETHERNET: 'ethernet',\n            WIFI: 'wifi',\n            CELL_2G: '2g',\n            CELL_3G: '3g',\n            CELL_4G: '4g',\n            CELL: 'cellular',\n            NONE: 'none'\n        };\n        return _this;\n    }\n    /**\n     * Returns an observable to watch connection changes\n     * @return {Observable<any>}\n     */\n    /**\n       * Returns an observable to watch connection changes\n       * @return {Observable<any>}\n       */\n    Network.prototype.onchange = /**\n       * Returns an observable to watch connection changes\n       * @return {Observable<any>}\n       */\n    function () {\n        return merge(this.onConnect(), this.onDisconnect());\n    };\n    /**\n     * Get notified when the device goes offline\n     * @returns {Observable<any>} Returns an observable.\n     */\n    /**\n       * Get notified when the device goes offline\n       * @returns {Observable<any>} Returns an observable.\n       */\n    Network.prototype.onDisconnect = /**\n       * Get notified when the device goes offline\n       * @returns {Observable<any>} Returns an observable.\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get notified when the device goes online\n     * @returns {Observable<any>} Returns an observable.\n     */\n    /**\n       * Get notified when the device goes online\n       * @returns {Observable<any>} Returns an observable.\n       */\n    Network.prototype.onConnect = /**\n       * Get notified when the device goes online\n       * @returns {Observable<any>} Returns an observable.\n       */\n    function () {\n        return;\n    };\n    Network.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"type\", void 0);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], Network.prototype, \"downlinkMax\", void 0);\n    __decorate([\n        CordovaCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onchange\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'offline',\n            element: document\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onDisconnect\", null);\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'online',\n            element: document\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], Network.prototype, \"onConnect\", null);\n    /**\n     * @name Network\n     * @description\n     * Requires Cordova plugin: cordova-plugin-network-information. For more info, please see the [Network plugin docs](https://github.com/apache/cordova-plugin-network-information).\n     *\n     * @usage\n     * ```typescript\n     * import { Network } from '@ionic-native/network';\n     *\n     * constructor(private network: Network) { }\n     *\n     * ...\n     *\n     * // watch network for a disconnection\n     * let disconnectSubscription = this.network.onDisconnect().subscribe(() => {\n     *   console.log('network was disconnected :-(');\n     * });\n     *\n     * // stop disconnect watch\n     * disconnectSubscription.unsubscribe();\n     *\n     *\n     * // watch network for a connection\n     * let connectSubscription = this.network.onConnect().subscribe(() => {\n     *   console.log('network connected!');\n     *   // We just got a connection but we need to wait briefly\n     *    // before we determine the connection type. Might need to wait.\n     *   // prior to doing any api requests as well.\n     *   setTimeout(() => {\n     *     if (this.network.type === 'wifi') {\n     *       console.log('we got a wifi connection, woohoo!');\n     *     }\n     *   }, 3000);\n     * });\n     *\n     * // stop connect watch\n     * connectSubscription.unsubscribe();\n     *\n     * ```\n     * @advanced\n     * The `type` property will return one of the following connection types: `unknown`, `ethernet`, `wifi`, `2g`, `3g`, `4g`, `cellular`, `none`\n     */\n    Network = __decorate([\n        Plugin({\n            pluginName: 'Network',\n            plugin: 'cordova-plugin-network-information',\n            pluginRef: 'navigator.connection',\n            repo: 'https://github.com/apache/cordova-plugin-network-information',\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Network);\n    return Network;\n}(IonicNativePlugin));\nexport { Network };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/network/index.js\n// module id = 532\n// module chunks = 9","import { Component } from '@angular/core';\nimport { IonicPage, ModalController, LoadingController, NavParams, ToastController, AlertController, NavController } from 'ionic-angular';\nimport { MenuFoods } from '../../models/interfaces';\nimport { MenuService } from '../../providers/menu-service/menu-service';\nimport { FavoritesProvider } from '../../providers/favorites/favorites';\nimport { finalize } from 'rxjs/operators';\nimport { Subscription, BehaviorSubject, Observable } from 'rxjs';\nimport { Network } from '@ionic-native/network';\n// import { NetworkService, ConnectionStatus } from '../../providers/network-detection/network-detection';\n\nenum ConnectionStatus {\n  Online,\n  Offline\n}\n\n@IonicPage()\n@Component({\n  selector: 'page-dishday',\n  templateUrl: 'dishday.html',\n})\nexport class DishdayPage {\n\n\n  dishDayRef: MenuFoods[] = [];\n  dishDay: string = 'DishDay';\n  connection: string;\n  private status: BehaviorSubject<ConnectionStatus> = new BehaviorSubject(ConnectionStatus.Offline);\n  offline$: Subscription;\n  online$: Subscription;\n  onChange$: Subscription;\n\n  constructor(public loadingCtrl: LoadingController, private service: MenuService, private modalCtrl: ModalController, public favorites: FavoritesProvider, public navParams: NavParams, public network: Network, public toastCtrl: ToastController, private alertCtrl: AlertController, private navCtrl: NavController) {\n    this.initializeNetworkEvents();\n    let status =  this.network.type !== 'none' ? ConnectionStatus.Online : ConnectionStatus.Offline;\n    this.status.next(status);\n  }\n\nionViewDidEnter() {\n\n  this.onChange$ = this.onNetworkChange().subscribe((status: ConnectionStatus) => {\n    console.log('STATUS: ', status);\n    if (status === 0) {\n      this.loadData();\n    } else {\n      this.showToast();\n    }\n  })\n  // this.initializeNetworkEvents();\n\n\n}\n\npublic initializeNetworkEvents() {\n\n  this.offline$ = this.network.onDisconnect().subscribe(() => {\n    if (this.status.getValue() === ConnectionStatus.Online) {\n      console.log('WE ARE OFFLINE');\n      this.updateNetworkStatus(ConnectionStatus.Offline);\n    }\n  });\n\n  this.online$ = this.network.onConnect().subscribe(() => {\n    if (this.status.getValue() === ConnectionStatus.Offline) {\n      console.log('WE ARE ONLINE');\n      this.updateNetworkStatus(ConnectionStatus.Online);\n      // this.loadData();\n    }\n  });\n}\n\nprivate async updateNetworkStatus(status: ConnectionStatus) {\n\n  this.status.next(status);\n\n  let connection = status == ConnectionStatus.Offline ? 'Offline' : 'Online';\n  let toast = this.toastCtrl.create({\n    message: `You are now ${connection}`,\n    duration: 3000,\n    position: 'bottom'\n  });\n\n  toast.present();\n\n  // toast.then(toast => toast.present());\n}\n\npublic onNetworkChange(): Observable<ConnectionStatus> {\n  return this.status.asObservable();\n}\n\npublic getCurrentNetworkStatus(): ConnectionStatus {\n  return this.status.getValue();\n}\n\n\n  loadData() {\n    let loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      spinner: 'dots'\n    });\n\n    loading.present();\n\n    this.service.getMenuFood(this.dishDay).pipe(\n      finalize(() => {\n      })\n    ).subscribe(items => {\n      if (items.length > 0) {\n        this.dishDayRef = items;\n        loading.dismiss();\n      } else {\n        console.log('There is no items to show');\n      }\n\n\n    });\n  }\n\n  displayNetworkChanges(connectionState: string) {\n\n    const connectionType = this.network.type;\n\n    this.toastCtrl.create({\n      message: `You are now ${connectionState} via ${connectionType}`,\n      duration: 4000\n    }).present();\n  }\n\n  async showToast() {\n    await this.toastCtrl.create({\n      message: 'Not network found',\n      duration: 4000\n    }).present();\n  }\n\n\n  openModal(dish: MenuFoods) {\n    let modal = this.modalCtrl.create(\n      'ModalPage',\n      { content: dish }\n    );\n    modal.present();\n  }\n\n  async sendFavorites(items: MenuFoods) {\n    await this.favorites.addFavorites(items);\n  }\n\n  ionViewWillLeave() {\n      this.online$.unsubscribe();\n      this.offline$.unsubscribe();\n      this.onChange$.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dishday/dishday.ts","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/observable/merge\"));\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/merge.js\n// module id = 659\n// module chunks = 9","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nexports.merge = rxjs_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs-compat/observable/merge.js\n// module id = 660\n// module chunks = 9"],"sourceRoot":""}